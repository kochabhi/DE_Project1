version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-1
    volumes:
      - kafka_data:/bitnami/kafka

  spark:
    image: bitnami/spark:latest
    container_name: spark
    depends_on:
      - kafka
    environment:
      - SPARK_MODE=client
    volumes:
    - ./checkpoints:/opt/spark-data/checkpoints
    - .:/app
    working_dir: /app
    command: sleep infinity

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-init:
    image: apache/airflow:2.9.1
    container_name: airflow-init
    depends_on:
      - postgres
    environment:
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=e7d6824060130678d7805c50650b62eae4c6f4f6957ec2984fac3adafa7ddf33
    entrypoint: >
      bash -c "airflow db init &&
        airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email airflow@example.com"
    restart: on-failure

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom-airflow:latest
    container_name: airflow-webserver
    depends_on:
      - postgres
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=e7d6824060130678d7805c50650b62eae4c6f4f6957ec2984fac3adafa7ddf33
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data_producer:/opt/airflow/data_producer
      - ./streaming_pipeline:/opt/airflow/streaming_pipeline
      - ./notebooks:/opt/airflow/notebooks
      - ./ml_model:/opt/airflow/ml_model
    command: webserver

  airflow-scheduler:
    image: custom-airflow:latest
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=e7d6824060130678d7805c50650b62eae4c6f4f6957ec2984fac3adafa7ddf33
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data_producer:/opt/airflow/data_producer
      - ./streaming_pipeline:/opt/airflow/streaming_pipeline
      - ./notebooks:/opt/airflow/notebooks
      - ./ml_model:/opt/airflow/ml_model
    command: scheduler

volumes:
  kafka_data:
  postgres_data: